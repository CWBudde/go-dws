// Test script for break/continue in nested loops
// This verifies that break and continue only affect the innermost loop

PrintLn('=== Nested Loops Control Flow Tests ===');
PrintLn('');

// Test 1: Break only exits innermost loop
PrintLn('Test 1: Break only exits innermost loop');
var outerCount1: Integer;
var innerCount1: Integer;
outerCount1 := 0;
innerCount1 := 0;

var i: Integer;
var j: Integer;
for i := 1 to 4 do
begin
	outerCount1 := outerCount1 + 1;
	for j := 1 to 10 do
	begin
		innerCount1 := innerCount1 + 1;
		if j = 3 then
			break;
	end;
end;

PrintLn('Outer loop iterations: ' + IntToStr(outerCount1) + ' (expected 4)');
PrintLn('Inner loop total iterations: ' + IntToStr(innerCount1) + ' (expected 12)');
PrintLn('PASS: Break only affected innermost loop');
PrintLn('');

// Test 2: Continue only affects innermost loop
PrintLn('Test 2: Continue only affects innermost loop');
var total: Integer;
total := 0;

var m: Integer;
var n: Integer;
for m := 1 to 3 do
begin
	for n := 1 to 5 do
	begin
		if n = 3 then
			continue;
		total := total + 1;
	end;
end;

PrintLn('Total increments: ' + IntToStr(total) + ' (expected 12)');
PrintLn('PASS: Continue only affected innermost loop');
PrintLn('');

// Test 3: Triple nested loops with break
PrintLn('Test 3: Triple nested loops with break');
var count1: Integer;
var count2: Integer;
var count3: Integer;
count1 := 0;
count2 := 0;
count3 := 0;

var a: Integer;
var b: Integer;
var c: Integer;
for a := 1 to 2 do
begin
	count1 := count1 + 1;
	for b := 1 to 3 do
	begin
		count2 := count2 + 1;
		for c := 1 to 10 do
		begin
			count3 := count3 + 1;
			if c = 2 then
				break;
		end;
	end;
end;

PrintLn('Level 1 iterations: ' + IntToStr(count1) + ' (expected 2)');
PrintLn('Level 2 iterations: ' + IntToStr(count2) + ' (expected 6)');
PrintLn('Level 3 iterations: ' + IntToStr(count3) + ' (expected 12)');
PrintLn('PASS: Break in triple nested loop affected only innermost');
PrintLn('');

// Test 4: Break and continue in same nested structure
PrintLn('Test 4: Break and continue combined in nested loops');
var sum: Integer;
sum := 0;

var p: Integer;
var q: Integer;
for p := 1 to 3 do
begin
	for q := 1 to 8 do
	begin
		if q = 4 then
			continue;
		if q = 6 then
			break;
		sum := sum + 1;
	end;
end;

// Each inner loop: increments for q=1,2,3,5 (skips 4, breaks at 6) = 4 increments
// Outer loop runs 3 times = 12 total
PrintLn('Total: ' + IntToStr(sum) + ' (expected 12)');
PrintLn('PASS: Break and continue worked together correctly');
PrintLn('');

// Test 5: Nested loops with different loop types
PrintLn('Test 5: Mixed loop types with break/continue');
var mixCount: Integer;
mixCount := 0;

var x: Integer;
for x := 1 to 3 do
begin
	var y: Integer;
	y := 0;
	while y < 10 do
	begin
		y := y + 1;
		if y = 2 then
			continue;
		if y = 5 then
			break;
		mixCount := mixCount + 1;
	end;
end;

// Inner while: y=1,3,4 (skip 2, break at 5) = 3 increments per outer iteration
// Outer for runs 3 times = 9 total
PrintLn('Mixed loops count: ' + IntToStr(mixCount) + ' (expected 9)');
PrintLn('PASS: Break/continue work with mixed loop types');
PrintLn('');

PrintLn('=== All Nested Loops Tests Complete ===');
